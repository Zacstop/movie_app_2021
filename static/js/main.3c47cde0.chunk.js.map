{"version":3,"sources":["Movie.js","App.js","reportWebVitals.js","index.js"],"names":["Movie","year","title","summary","poster","genres","className","src","alt","slice","map","genre","index","App","state","isLoding","movies","getMovies","a","axios","get","data","setState","this","movie","id","medium_cover_image","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4TA+BeA,MA3Bf,YAAwD,IAAxCC,EAAuC,EAAvCA,KAAMC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,OAAQC,EAAS,EAATA,OAC5C,OACG,sBAAKC,UAAU,QAAf,UACE,qBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IACrC,sBAAKI,UAAU,cAAf,UACC,oBAAIA,UAAU,eAAd,SAA8BJ,IAC9B,oBAAII,UAAU,cAAd,SAA6BL,IAC7B,oBAAGK,UAAU,iBAAb,UAA+BH,EAAQM,MAAM,EAAE,KAA/C,SACA,oBAAIH,UAAU,SAAd,SACGD,EAAOK,KAAI,SAACC,EAAOC,GAAR,OACV,oBAAgBN,UAAU,gBAA1B,SAA2CK,GAAlCC,eCoCNC,G,kNA5CbC,MAAQ,CACNC,UAAU,EACVC,OAAQ,I,EAGZC,U,sBAAY,8BAAAC,EAAA,sEAKEC,IAAMC,IAAI,4DALZ,gBAGEJ,EAHF,EAERK,KACEA,KAAQL,OAGV,EAAKM,SAAS,CAACN,SAAQD,UAAU,IANzB,2C,uDASZ,WACEQ,KAAKN,c,oBAGP,WACE,MAA6BM,KAAKT,MAA1BC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,OAClB,OAAO,yBAASV,UAAU,YAAnB,SACJS,EACI,qBAAKT,UAAU,SAAf,SACF,sBAAMA,UAAU,eAAhB,0BAGF,qBAAKA,UAAU,SAAf,SACGU,EAAON,KAAI,SAAAc,GAAK,OACpB,cAAC,EAAD,CAEEC,GAAID,EAAMC,GACVxB,KAAMuB,EAAMvB,KACZC,MAAOsB,EAAMtB,MACbC,QAASqB,EAAMrB,QACfC,OAAQoB,EAAME,mBACdrB,OAAQmB,EAAMnB,QANTmB,EAAMC,e,GA9BCE,IAAMC,YCOTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3c47cde0.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Movie.css\";\r\n\r\nfunction Movie({year, title, summary, poster, genres}) {\r\n  return (\r\n     <div className=\"movie\"> \r\n       <img src={poster} alt={title} title={title}></img>\r\n       <div className=\"movie__data\">\r\n        <h3 className=\"movie__title\">{title}</h3>\r\n        <h5 className=\"movie__year\">{year}</h5>\r\n        <p className=\"movie__summary\">{summary.slice(0,145)}...</p>\r\n        <ul className=\"genres\">\r\n          {genres.map((genre, index) => (\r\n            <li key={index} className=\"genres__genre\">{genre}</li>\r\n          ))}\r\n        </ul> \r\n       </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nMovie.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  year: PropTypes.number.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  summary: PropTypes.string.isRequired,\r\n  poster: PropTypes.string.isRequired,\r\n  genres: PropTypes.arrayOf(PropTypes.string).isRequired\r\n};\r\n\r\nexport default Movie;","import React from \"react\";\nimport axios from \"axios\";\nimport Movie from \"./Movie\";\nimport \"./App.css\";\n\nclass App extends React.Component{\n  state = {\n    isLoding: true,\n    movies: []\n  }\n\ngetMovies = async () => {\n  const {\n    data: {\n      data: { movies }\n      }\n    } = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\");\n    this.setState({movies, isLoding: false })\n  };\n\ncomponentDidMount() {\n  this.getMovies();\n}\n\nrender() {\n  const { isLoding, movies } = this.state;\n  return <section className=\"container\">\n    {isLoding\n     ? ( <div className=\"loader\">\n       <span className=\"loader__text\">Loading...</span>\n     </div> \n    ) : (\n     <div className=\"movies\">\n      { movies.map(movie => (\n    <Movie \n      key={movie.id}\n      id={movie.id}\n      year={movie.year}\n      title={movie.title}\n      summary={movie.summary}\n      poster={movie.medium_cover_image}\n      genres={movie.genres}\n    />\n    ))}\n  </div>\n  )}\n  </section>;\n}\n\n};\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}