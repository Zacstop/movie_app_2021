{"version":3,"sources":["Movie.js","App.js","reportWebVitals.js","index.js"],"names":["Movie","title","summary","poster","year","genres","className","src","alt","map","genre","index","slice","App","state","isLoding","movies","getMovies","a","axios","get","data","setState","this","movie","id","medium_cover_image","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4TA+BeA,MA3Bf,YAAwD,IAAxCC,EAAuC,EAAvCA,MAAOC,EAAgC,EAAhCA,QAASC,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,KAAMC,EAAS,EAATA,OAC5C,OACA,sBAAKC,UAAU,QAAf,UACE,qBAAKC,IAAKJ,EAAQK,IAAKP,IACvB,sBAAKK,UAAU,cAAf,UACE,oBAAIA,UAAU,eAAd,SAA8BL,IAC9B,oBAAIK,UAAU,cAAd,SAA6BF,IAC7B,oBAAIE,UAAU,SAAd,SACGD,EAAOI,KAAI,SAACC,EAAOC,GAAR,OACV,oBAAgBL,UAAU,gBAA1B,SAA2CI,GAAlCC,QAGb,mBAAGL,UAAU,iBAAb,SAA+BJ,EAAQU,MAAM,EAAG,cC+BvCC,G,kNAzCbC,MAAQ,CACNC,UAAU,EACVC,OAAQ,I,EAEVC,U,sBAAY,8BAAAC,EAAA,sEAKEC,IAAMC,IACd,oEANM,gBAGIJ,EAHJ,EAERK,KACGA,KAASL,OAKZ,EAAKM,SAAS,CAAEN,SAAQD,UAAU,IAR1B,2C,uDAUZ,WACEQ,KAAKN,c,oBAEP,WACE,MAA6BM,KAAKT,MAA1BC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,OAClB,OACA,yBAASV,UAAU,YAAnB,SACGS,EACD,qBAAKT,UAAU,SAAf,SACE,sBAAMA,UAAU,eAAhB,0BAEA,qBAAKA,UAAU,SAAf,SACCU,EAAOP,KAAI,SAAAe,GAAK,OACf,cAAC,EAAD,CACAC,GAAID,EAAMC,GAAIrB,KAAMoB,EAAMpB,KAC1BH,MAAOuB,EAAMvB,MAAOC,QAASsB,EAAMtB,QACnCC,OAAQqB,EAAME,mBACdrB,OAAQmB,EAAMnB,oB,GAhCNsB,IAAMC,YCOTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.49f465bd.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Movie.css\"\r\n\r\nfunction Movie({title, summary, poster, year, genres}) {\r\n  return (\r\n  <div className=\"movie\">\r\n    <img src={poster} alt={title}></img>\r\n    <div className=\"movie__data\">\r\n      <h3 className=\"movie__title\">{title}</h3>\r\n      <h5 className=\"movie__year\">{year}</h5>\r\n      <ul className=\"genres\">\r\n        {genres.map((genre, index) => (\r\n          <li key={index} className=\"genres__genre\">{genre}</li>\r\n        ))}\r\n      </ul>\r\n      <p className=\"movie__summary\">{summary.slice(0, 180)}</p>\r\n    </div>\r\n  </div>\r\n  );\r\n}\r\n\r\nMovie.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  summary: PropTypes.string.isRequired,\r\n  poster: PropTypes.string.isRequired,\r\n  year: PropTypes.number.isRequired,\r\n  genres: PropTypes.arrayOf(PropTypes.string).isRequired\r\n}\r\n\r\nexport default Movie;","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport Movie from \"./Movie\";\r\nimport \"./App.css\"\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    isLoding: true,\r\n    movies: []\r\n  };\r\n  getMovies = async () => {\r\n    const {\r\n      data: {\r\n         data : { movies }\r\n        }\r\n      } = await axios.get(\r\n        \"https://yts-proxy.now.sh/list_movies.json?sort_by=download_count\"\r\n        )\r\n      this.setState({ movies, isLoding: false });\r\n    };\r\n  componentDidMount() {\r\n    this.getMovies();\r\n  };\r\n  render() {\r\n    const { isLoding, movies } = this.state;\r\n    return (\r\n    <section className=\"container\">\r\n      {isLoding ? \r\n      <div className=\"loader\">\r\n        <span className=\"loader__text\">Loading...</span>\r\n      </div> \r\n      : <div className=\"movies\">\r\n        {movies.map(movie =>(\r\n          <Movie \r\n          id={movie.id} year={movie.year} \r\n          title={movie.title} summary={movie.summary}\r\n          poster={movie.medium_cover_image} \r\n          genres={movie.genres}\r\n        />\r\n        ))}\r\n      </div>\r\n      }\r\n    </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}